name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout Code
        uses: actions/checkout@v4

      # 2. JDK 21 설정
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3. Docker Compose 설치
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # 4. Gradle 캐싱
      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper/
          key: "gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}"
          restore-keys: |
            gradle-${{ runner.os }}-

      # 5. Gradle 실행 권한 부여
      - name: Grant Execute Permission for Gradle Wrapper
        run: chmod +x ./gradlew

      # 6. Gradle 빌드 및 상세 로그 출력
      - name: Build with Gradle
        run: ./gradlew bootJar --info

      # 7. JAR 파일 존재 확인
      - name: Verify JAR File
        run: ls -la build/libs

      # 8. Docker 이미지 빌드
      - name: Build Docker Image
        run: docker build -t springboot-app .

      # 9. Docker Compose로 서비스 실행
      - name: Run Docker Compose
        run: docker-compose up -d

      # 10. 서비스 준비 시간 대기
      - name: Wait for Services to Start
        run: sleep 30

      # 11. Docker 컨테이너 실행 확인
      - name: Test Docker Container
        run: |
          # 애플리케이션이 호스트 포트 8080에서 실행 중인지 확인
          curl --fail http://localhost:8080 || exit 1
